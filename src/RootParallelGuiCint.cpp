//
// File generated by rootcint at Mon Jul 16 03:30:48 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIdIRootParallelGuiCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RootParallelGuiCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ROOT_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ROOT", 0 /*version*/, "./include/RootParallelGui.h", 31,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ROOT_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ROOT_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }

namespace ROOT {
   void ROOTcLcLParallelGui_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ROOTcLcLParallelGui(void *p = 0);
   static void *newArray_ROOTcLcLParallelGui(Long_t size, void *p);
   static void delete_ROOTcLcLParallelGui(void *p);
   static void deleteArray_ROOTcLcLParallelGui(void *p);
   static void destruct_ROOTcLcLParallelGui(void *p);
   static void streamer_ROOTcLcLParallelGui(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::ParallelGui*)
   {
      ::ROOT::ParallelGui *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ROOT::ParallelGui >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::ParallelGui", ::ROOT::ParallelGui::Class_Version(), "./include/RootParallelGui.h", 32,
                  typeid(::ROOT::ParallelGui), DefineBehavior(ptr, ptr),
                  &::ROOT::ParallelGui::Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::ParallelGui) );
      instance.SetNew(&new_ROOTcLcLParallelGui);
      instance.SetNewArray(&newArray_ROOTcLcLParallelGui);
      instance.SetDelete(&delete_ROOTcLcLParallelGui);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLParallelGui);
      instance.SetDestructor(&destruct_ROOTcLcLParallelGui);
      instance.SetStreamerFunc(&streamer_ROOTcLcLParallelGui);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::ParallelGui*)
   {
      return GenerateInitInstanceLocal((::ROOT::ParallelGui*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::ParallelGui*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace ROOT {
//______________________________________________________________________________
TClass *ParallelGui::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ParallelGui::Class_Name()
{
   return "ROOT::ParallelGui";
}

//______________________________________________________________________________
const char *ParallelGui::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGui*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParallelGui::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGui*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParallelGui::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGui*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParallelGui::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGui*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ROOT
      namespace ROOT {
//______________________________________________________________________________
void ParallelGui::Streamer(TBuffer &R__b)
{
   // Stream an object of class ROOT::ParallelGui.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::ROOT::ParallelGui thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> MpiLauncher;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << MpiLauncher;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace ROOT
//______________________________________________________________________________
      namespace ROOT {
void ParallelGui::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ROOT::ParallelGui.
      TClass *R__cl = ::ROOT::ParallelGui::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MpiLauncher", &MpiLauncher);
      R__insp.GenericShowMembers("QMainWindow", ( ::QMainWindow *) (this ), false);
      R__insp.GenericShowMembers("Ui::RootParallelGui", ( ::Ui::RootParallelGui *) (this ), false);
}

} // namespace ROOT
namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLParallelGui(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::ParallelGui : new ::ROOT::ParallelGui;
   }
   static void *newArray_ROOTcLcLParallelGui(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::ParallelGui[nElements] : new ::ROOT::ParallelGui[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLParallelGui(void *p) {
      delete ((::ROOT::ParallelGui*)p);
   }
   static void deleteArray_ROOTcLcLParallelGui(void *p) {
      delete [] ((::ROOT::ParallelGui*)p);
   }
   static void destruct_ROOTcLcLParallelGui(void *p) {
      typedef ::ROOT::ParallelGui current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ROOTcLcLParallelGui(TBuffer &buf, void *obj) {
      ((::ROOT::ParallelGui*)obj)->::ROOT::ParallelGui::Streamer(buf);
   }
} // end of namespace ROOT for class ::ROOT::ParallelGui

/********************************************************
* src//RootParallelGuiCint.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRootParallelGuiCint();

extern "C" void G__set_cpp_environmentRootParallelGuiCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/RootParallelGui.h");
  G__cpp_reset_tagtableRootParallelGuiCint();
}
#include <new>
extern "C" int G__cpp_dllrevRootParallelGuiCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT */
static int G__RootParallelGuiCint_25_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::CreateClass(
(const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, *(type_info*) libp->para[2].ref, (TVirtualIsAProxy*) G__int(libp->para[3])
, (ShowMembersFunc_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_25_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::AddClass((const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, *(type_info*) libp->para[2].ref, (VoidFuncPtr_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_25_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::RemoveClass((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_25_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::ResetClassVersion((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_25_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::RegisterClassTemplate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_25_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::DefineBehavior((void*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::ParallelGui */
static int G__RootParallelGuiCint_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::ParallelGui* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::ParallelGui((QMainWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ROOT::ParallelGui((QMainWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::ParallelGui[n];
       } else {
         p = new((void*) gvp) ROOT::ParallelGui[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::ParallelGui;
       } else {
         p = new((void*) gvp) ROOT::ParallelGui;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGui*) G__getstructoffset())->showMpiLauncher();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGui*) G__getstructoffset())->closeMpiLauncher((ROOT::ParallelGuiMpiLauncher*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGui*) G__getstructoffset())->prepend(*((QString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::ParallelGui::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::ParallelGui::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ROOT::ParallelGui::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::ParallelGui::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ROOT::ParallelGui*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGui*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGui*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGui*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::ParallelGui::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::ParallelGui::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::ParallelGui::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCint_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::ParallelGui::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::ParallelGui G__TROOTcLcLParallelGui;
static int G__RootParallelGuiCint_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::ParallelGui*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::ParallelGui*) (soff+(sizeof(ROOT::ParallelGui)*i)))->~G__TROOTcLcLParallelGui();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::ParallelGui*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::ParallelGui*) (soff))->~G__TROOTcLcLParallelGui();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT */

/* ROOT::ParallelGui */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRootParallelGuiCint {
 public:
  G__Sizep2memfuncRootParallelGuiCint(): p(&G__Sizep2memfuncRootParallelGuiCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRootParallelGuiCint::*p)();
};

size_t G__get_sizep2memfuncRootParallelGuiCint()
{
  G__Sizep2memfuncRootParallelGuiCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRootParallelGuiCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui))) {
     ROOT::ParallelGui *G__Lderived;
     G__Lderived=(ROOT::ParallelGui*)0x1000;
     {
       QMainWindow *G__Lpbase=(QMainWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui),G__get_linked_tagnum(&G__RootParallelGuiCintLN_QMainWindow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Ui::RootParallelGui *G__Lpbase=(Ui::RootParallelGui*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui),G__get_linked_tagnum(&G__RootParallelGuiCintLN_UicLcLRootParallelGui),(long)G__Lpbase-(long)G__Lderived,4,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRootParallelGuiCint() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("ShowMembersFunc_t",89,-1,0,-1);
   G__setnewtype(-1,"void (*ShowMembersFunc_t)(void *obj, TMemberInspector &R__insp);",0);
   G__search_typename2("NewFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void *(*NewFunc_t)(void *);",0);
   G__search_typename2("NewArrFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void *(*NewArrFunc_t)(Long_t size, void *arena);",0);
   G__search_typename2("DelFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void  (*DelFunc_t)(void *);",0);
   G__search_typename2("DelArrFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void  (*DelArrFunc_t)(void *);",0);
   G__search_typename2("DesFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void  (*DesFunc_t)(void *);",0);
   G__search_typename2("DirAutoAdd_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void  (*DirAutoAdd_t)(void *, TDirectory *);",0);
   G__search_typename2("MergeFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"Long64_t (*MergeFunc_t)(void *, TCollection *, TFileMergeInfo *);",0);
   G__search_typename2("ResetAfterMergeFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__setnewtype(-1,"void  (*ResetAfterMergeFunc_t)(void *, TFileMergeInfo *);",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RootParallelGuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RootParallelGuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT */
static void G__setup_memvarROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   {
   }
   G__tag_memvar_reset();
}


   /* ROOT::ParallelGui */
static void G__setup_memvarROOTcLcLParallelGui(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui));
   { ROOT::ParallelGui *p; p=(ROOT::ParallelGui*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGuiMpiLauncher),-1,-1,4,"MpiLauncher=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRootParallelGuiCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOT(void) {
   /* ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOT));
   G__memfunc_setup("CreateClass",1098,G__RootParallelGuiCint_25_0_1, 85, G__get_linked_tagnum(&G__RootParallelGuiCintLN_TClass), -1, 0, 9, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"u 'type_info' - 11 - info U 'TVirtualIsAProxy' - 0 - isa "
"Y - 'ShowMembersFunc_t' 0 - show C - - 10 - dfil "
"C - - 10 - ifil i - 'Int_t' 0 - dl "
"i - 'Int_t' 0 - il", (char*)NULL, (void*) G__func2void( (TClass* (*)(const char*, Version_t, const type_info&, TVirtualIsAProxy*, ShowMembersFunc_t, const char*, const char*, Int_t, Int_t))(&ROOT::CreateClass) ), 0);
   G__memfunc_setup("AddClass",767,G__RootParallelGuiCint_25_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"u 'type_info' - 11 - info Y - 'VoidFuncPtr_t' 0 - dict "
"i - 'Int_t' 0 - pragmabits", (char*)NULL, (void*) G__func2void( (void (*)(const char*, Version_t, const type_info&, VoidFuncPtr_t, Int_t))(&ROOT::AddClass) ), 0);
   G__memfunc_setup("RemoveClass",1124,G__RootParallelGuiCint_25_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - cname", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&ROOT::RemoveClass) ), 0);
   G__memfunc_setup("ResetClassVersion",1759,G__RootParallelGuiCint_25_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TClass' - 0 - - C - - 10 - - "
"s - 'Short_t' 0 - -", (char*)NULL, (void*) G__func2void( (void (*)(TClass*, const char*, Short_t))(&ROOT::ResetClassVersion) ), 0);
   G__memfunc_setup("RegisterClassTemplate",2167,G__RootParallelGuiCint_25_0_5, 85, G__get_linked_tagnum(&G__RootParallelGuiCintLN_TNamed), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - file "
"i - 'Int_t' 0 - line", (char*)NULL, (void*) G__func2void( (TNamed* (*)(const char*, const char*, Int_t))(&ROOT::RegisterClassTemplate) ), 0);
   G__memfunc_setup("DefineBehavior",1403,G__RootParallelGuiCint_25_0_6, 85, G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLTInitBehavior), -1, 0, 2, 1, 1, 1, 
"Y - - 0 - - Y - - 0 - -", (char*)NULL, (void*) G__func2void( (const ROOT::TInitBehavior* (*)(void*, void*))(&ROOT::DefineBehavior) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLParallelGui(void) {
   /* ROOT::ParallelGui */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui));
   G__memfunc_setup("ParallelGui",1106,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui), -1, 0, 1, 1, 4, 0, "u 'ROOT::ParallelGui' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui), -1, 1, 1, 1, 4, 0, "u 'ROOT::ParallelGui' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParallelGui",1106,G__RootParallelGuiCint_183_0_3, 105, G__get_linked_tagnum(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui), -1, 0, 1, 1, 1, 0, "U 'QMainWindow' - 0 '0' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showMpiLauncher",1561,G__RootParallelGuiCint_183_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeMpiLauncher",1646,G__RootParallelGuiCint_183_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ROOT::ParallelGuiMpiLauncher' - 0 - mpiLauncher", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prepend",750,G__RootParallelGuiCint_183_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'QString' - 0 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RootParallelGuiCint_183_0_7, 85, G__get_linked_tagnum(&G__RootParallelGuiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ROOT::ParallelGui::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RootParallelGuiCint_183_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::ParallelGui::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RootParallelGuiCint_183_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ROOT::ParallelGui::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RootParallelGuiCint_183_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ROOT::ParallelGui::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RootParallelGuiCint_183_0_11, 85, G__get_linked_tagnum(&G__RootParallelGuiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RootParallelGuiCint_183_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RootParallelGuiCint_183_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootParallelGuiCint_183_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RootParallelGuiCint_183_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::ParallelGui::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RootParallelGuiCint_183_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::ParallelGui::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RootParallelGuiCint_183_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::ParallelGui::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RootParallelGuiCint_183_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::ParallelGui::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ParallelGui", 1232, G__RootParallelGuiCint_183_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRootParallelGuiCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRootParallelGuiCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRootParallelGuiCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RootParallelGuiCintLN_type_info = { "type_info" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_TVirtualIsAProxy = { "TVirtualIsAProxy" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_ROOTcLcLTInitBehavior = { "ROOT::TInitBehavior" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_Ui = { "Ui" , 110 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_UicLcLRootParallelGui = { "Ui::RootParallelGui" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_QMainWindow = { "QMainWindow" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_QString = { "QString" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_ROOTcLcLParallelGuiMpiLauncher = { "ROOT::ParallelGuiMpiLauncher" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintLN_ROOTcLcLParallelGui = { "ROOT::ParallelGui" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRootParallelGuiCint() {
  G__RootParallelGuiCintLN_type_info.tagnum = -1 ;
  G__RootParallelGuiCintLN_TClass.tagnum = -1 ;
  G__RootParallelGuiCintLN_TBuffer.tagnum = -1 ;
  G__RootParallelGuiCintLN_TMemberInspector.tagnum = -1 ;
  G__RootParallelGuiCintLN_TNamed.tagnum = -1 ;
  G__RootParallelGuiCintLN_TVirtualIsAProxy.tagnum = -1 ;
  G__RootParallelGuiCintLN_ROOT.tagnum = -1 ;
  G__RootParallelGuiCintLN_ROOTcLcLTInitBehavior.tagnum = -1 ;
  G__RootParallelGuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RootParallelGuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootParallelGuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RootParallelGuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootParallelGuiCintLN_Ui.tagnum = -1 ;
  G__RootParallelGuiCintLN_UicLcLRootParallelGui.tagnum = -1 ;
  G__RootParallelGuiCintLN_QMainWindow.tagnum = -1 ;
  G__RootParallelGuiCintLN_QString.tagnum = -1 ;
  G__RootParallelGuiCintLN_ROOTcLcLParallelGuiMpiLauncher.tagnum = -1 ;
  G__RootParallelGuiCintLN_ROOTcLcLParallelGui.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRootParallelGuiCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_type_info);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_TVirtualIsAProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_ROOT),0,-1,0,(char*)NULL,G__setup_memvarROOT,G__setup_memfuncROOT);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_ROOTcLcLTInitBehavior);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_Ui);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_UicLcLRootParallelGui);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_QMainWindow);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_QString);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_ROOTcLcLParallelGuiMpiLauncher);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootParallelGuiCintLN_ROOTcLcLParallelGui),sizeof(ROOT::ParallelGui),-1,2816,(char*)NULL,G__setup_memvarROOTcLcLParallelGui,G__setup_memfuncROOTcLcLParallelGui);
}
extern "C" void G__cpp_setupRootParallelGuiCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupRootParallelGuiCint()");
  G__set_cpp_environmentRootParallelGuiCint();
  G__cpp_setup_tagtableRootParallelGuiCint();

  G__cpp_setup_inheritanceRootParallelGuiCint();

  G__cpp_setup_typetableRootParallelGuiCint();

  G__cpp_setup_memvarRootParallelGuiCint();

  G__cpp_setup_memfuncRootParallelGuiCint();
  G__cpp_setup_globalRootParallelGuiCint();
  G__cpp_setup_funcRootParallelGuiCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRootParallelGuiCint();
  return;
}
class G__cpp_setup_initRootParallelGuiCint {
  public:
    G__cpp_setup_initRootParallelGuiCint() { G__add_setup_func("RootParallelGuiCint",(G__incsetup)(&G__cpp_setupRootParallelGuiCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRootParallelGuiCint() { G__remove_setup_func("RootParallelGuiCint"); }
};
G__cpp_setup_initRootParallelGuiCint G__cpp_setup_initializerRootParallelGuiCint;

