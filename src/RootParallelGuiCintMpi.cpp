//
// File generated by rootcint at Mon Jul 16 18:56:16 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIdIRootParallelGuiCintMpi
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RootParallelGuiCintMpi.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ROOT_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ROOT", 0 /*version*/, "./include/RootParallelGuiMpiLauncher.h", 43,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ROOT_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ROOT_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }

namespace ROOT {
   void ROOTcLcLParallelGuiMpiLauncher_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ROOTcLcLParallelGuiMpiLauncher(void *p = 0);
   static void *newArray_ROOTcLcLParallelGuiMpiLauncher(Long_t size, void *p);
   static void delete_ROOTcLcLParallelGuiMpiLauncher(void *p);
   static void deleteArray_ROOTcLcLParallelGuiMpiLauncher(void *p);
   static void destruct_ROOTcLcLParallelGuiMpiLauncher(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::ParallelGuiMpiLauncher*)
   {
      ::ROOT::ParallelGuiMpiLauncher *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ROOT::ParallelGuiMpiLauncher >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::ParallelGuiMpiLauncher", ::ROOT::ParallelGuiMpiLauncher::Class_Version(), "./include/RootParallelGuiMpiLauncher.h", 44,
                  typeid(::ROOT::ParallelGuiMpiLauncher), DefineBehavior(ptr, ptr),
                  &::ROOT::ParallelGuiMpiLauncher::Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::ParallelGuiMpiLauncher) );
      instance.SetNew(&new_ROOTcLcLParallelGuiMpiLauncher);
      instance.SetNewArray(&newArray_ROOTcLcLParallelGuiMpiLauncher);
      instance.SetDelete(&delete_ROOTcLcLParallelGuiMpiLauncher);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLParallelGuiMpiLauncher);
      instance.SetDestructor(&destruct_ROOTcLcLParallelGuiMpiLauncher);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::ParallelGuiMpiLauncher*)
   {
      return GenerateInitInstanceLocal((::ROOT::ParallelGuiMpiLauncher*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::ParallelGuiMpiLauncher*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace ROOT {
//______________________________________________________________________________
TClass *ParallelGuiMpiLauncher::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ParallelGuiMpiLauncher::Class_Name()
{
   return "ROOT::ParallelGuiMpiLauncher";
}

//______________________________________________________________________________
const char *ParallelGuiMpiLauncher::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGuiMpiLauncher*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParallelGuiMpiLauncher::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGuiMpiLauncher*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParallelGuiMpiLauncher::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGuiMpiLauncher*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParallelGuiMpiLauncher::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::ParallelGuiMpiLauncher*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ROOT
      namespace ROOT {
//______________________________________________________________________________
void ParallelGuiMpiLauncher::Streamer(TBuffer &R__b)
{
   // Stream an object of class ROOT::ParallelGuiMpiLauncher.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ROOT::ParallelGuiMpiLauncher::Class(),this);
   } else {
      R__b.WriteClassBuffer(ROOT::ParallelGuiMpiLauncher::Class(),this);
   }
}

} // namespace ROOT
//______________________________________________________________________________
      namespace ROOT {
void ParallelGuiMpiLauncher::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ROOT::ParallelGuiMpiLauncher.
      TClass *R__cl = ::ROOT::ParallelGuiMpiLauncher::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*futureRunner", &futureRunner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*process", &process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MpiRunPath", (void*)&MpiRunPath);
      R__insp.InspectMember("QString", (void*)&MpiRunPath, "MpiRunPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RootPath", (void*)&RootPath);
      R__insp.InspectMember("QString", (void*)&RootPath, "RootPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timer", &timer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid", &pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "args", (void*)&args);
      R__insp.InspectMember("QStringList", (void*)&args, "args.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rootArgs", (void*)&rootArgs);
      R__insp.InspectMember("QStringList", (void*)&rootArgs, "rootArgs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bEmitOuput", &bEmitOuput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMacro", &fMacro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "env", (void*)&env);
      R__insp.InspectMember("QProcessEnvironment", (void*)&env, "env.", false);
      R__insp.GenericShowMembers("QWidget", ( ::QWidget *) (this ), false);
      R__insp.GenericShowMembers("Ui::RootParallelGuiMpiLauncher", ( ::Ui::RootParallelGuiMpiLauncher *) (this ), false);
}

} // namespace ROOT
namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLParallelGuiMpiLauncher(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::ParallelGuiMpiLauncher : new ::ROOT::ParallelGuiMpiLauncher;
   }
   static void *newArray_ROOTcLcLParallelGuiMpiLauncher(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::ParallelGuiMpiLauncher[nElements] : new ::ROOT::ParallelGuiMpiLauncher[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLParallelGuiMpiLauncher(void *p) {
      delete ((::ROOT::ParallelGuiMpiLauncher*)p);
   }
   static void deleteArray_ROOTcLcLParallelGuiMpiLauncher(void *p) {
      delete [] ((::ROOT::ParallelGuiMpiLauncher*)p);
   }
   static void destruct_ROOTcLcLParallelGuiMpiLauncher(void *p) {
      typedef ::ROOT::ParallelGuiMpiLauncher current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::ParallelGuiMpiLauncher

/********************************************************
* src//RootParallelGuiCintMpi.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRootParallelGuiCintMpi();

extern "C" void G__set_cpp_environmentRootParallelGuiCintMpi() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/RootParallelGuiMpiLauncher.h");
  G__cpp_reset_tagtableRootParallelGuiCintMpi();
}
#include <new>
extern "C" int G__cpp_dllrevRootParallelGuiCintMpi() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT */
static int G__RootParallelGuiCintMpi_25_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::CreateClass(
(const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, *(type_info*) libp->para[2].ref, (TVirtualIsAProxy*) G__int(libp->para[3])
, (ShowMembersFunc_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_25_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::AddClass((const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, *(type_info*) libp->para[2].ref, (VoidFuncPtr_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_25_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::RemoveClass((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_25_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::ResetClassVersion((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_25_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::RegisterClassTemplate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_25_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::DefineBehavior((void*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::ParallelGuiMpiLauncher */
static int G__RootParallelGuiCintMpi_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::ParallelGuiMpiLauncher* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::ParallelGuiMpiLauncher((QWidget*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ROOT::ParallelGuiMpiLauncher((QWidget*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::ParallelGuiMpiLauncher[n];
       } else {
         p = new((void*) gvp) ROOT::ParallelGuiMpiLauncher[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::ParallelGuiMpiLauncher;
       } else {
         p = new((void*) gvp) ROOT::ParallelGuiMpiLauncher;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->SetEmitOutput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->SetEmitOutput();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->launch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getExecutable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->readStandardError();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->readStandardOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->started();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->finished((int) G__int(libp->para[0]), (QProcess::ExitStatus) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->updateTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getPath();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getPrefix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getTmpDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getWdir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getPreloadFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->removePreloadFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->getPreloadFilesDestDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->addEnvironmentVariable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->removeEnvironmentVariable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->saveMacro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->setMacroBinaryMode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::ParallelGuiMpiLauncher::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::ParallelGuiMpiLauncher::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ROOT::ParallelGuiMpiLauncher::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::ParallelGuiMpiLauncher::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::ParallelGuiMpiLauncher*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::ParallelGuiMpiLauncher::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::ParallelGuiMpiLauncher::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::ParallelGuiMpiLauncher::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootParallelGuiCintMpi_180_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::ParallelGuiMpiLauncher::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::ParallelGuiMpiLauncher G__TROOTcLcLParallelGuiMpiLauncher;
static int G__RootParallelGuiCintMpi_180_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::ParallelGuiMpiLauncher*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::ParallelGuiMpiLauncher*) (soff+(sizeof(ROOT::ParallelGuiMpiLauncher)*i)))->~G__TROOTcLcLParallelGuiMpiLauncher();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::ParallelGuiMpiLauncher*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::ParallelGuiMpiLauncher*) (soff))->~G__TROOTcLcLParallelGuiMpiLauncher();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT */

/* ROOT::ParallelGuiMpiLauncher */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRootParallelGuiCintMpi {
 public:
  G__Sizep2memfuncRootParallelGuiCintMpi(): p(&G__Sizep2memfuncRootParallelGuiCintMpi::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRootParallelGuiCintMpi::*p)();
};

size_t G__get_sizep2memfuncRootParallelGuiCintMpi()
{
  G__Sizep2memfuncRootParallelGuiCintMpi a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRootParallelGuiCintMpi() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher))) {
     ROOT::ParallelGuiMpiLauncher *G__Lderived;
     G__Lderived=(ROOT::ParallelGuiMpiLauncher*)0x1000;
     {
       QWidget *G__Lpbase=(QWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher),G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QWidget),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Ui::RootParallelGuiMpiLauncher *G__Lpbase=(Ui::RootParallelGuiMpiLauncher*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher),G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_UicLcLRootParallelGuiMpiLauncher),(long)G__Lpbase-(long)G__Lderived,4,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRootParallelGuiCintMpi() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("ShowMembersFunc_t",89,-1,0,-1);
   G__setnewtype(-1,"void (*ShowMembersFunc_t)(void *obj, TMemberInspector &R__insp);",0);
   G__search_typename2("NewFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void *(*NewFunc_t)(void *);",0);
   G__search_typename2("NewArrFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void *(*NewArrFunc_t)(Long_t size, void *arena);",0);
   G__search_typename2("DelFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void  (*DelFunc_t)(void *);",0);
   G__search_typename2("DelArrFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void  (*DelArrFunc_t)(void *);",0);
   G__search_typename2("DesFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void  (*DesFunc_t)(void *);",0);
   G__search_typename2("DirAutoAdd_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void  (*DirAutoAdd_t)(void *, TDirectory *);",0);
   G__search_typename2("MergeFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"Long64_t (*MergeFunc_t)(void *, TCollection *, TFileMergeInfo *);",0);
   G__search_typename2("ResetAfterMergeFunc_t",89,-1,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__setnewtype(-1,"void  (*ResetAfterMergeFunc_t)(void *, TFileMergeInfo *);",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT */
static void G__setup_memvarROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   {
   }
   G__tag_memvar_reset();
}


   /* ROOT::ParallelGuiMpiLauncher */
static void G__setup_memvarROOTcLcLParallelGuiMpiLauncher(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher));
   { ROOT::ParallelGuiMpiLauncher *p; p=(ROOT::ParallelGuiMpiLauncher*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QFutureWatcherlEvoidgR),-1,-1,4,"futureRunner=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QProcess),-1,-1,4,"process=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QString),-1,-1,4,"MpiRunPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QString),-1,-1,4,"RootPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QTimer),-1,-1,4,"timer=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Q_PID"),-1,4,"pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QStringList),-1,-1,4,"args=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QStringList),-1,-1,4,"rootArgs=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"bEmitOuput=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QFile),-1,-1,4,"fMacro=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_QProcessEnvironment),-1,-1,4,"env=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRootParallelGuiCintMpi() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOT(void) {
   /* ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOT));
   G__memfunc_setup("CreateClass",1098,G__RootParallelGuiCintMpi_25_0_1, 85, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_TClass), -1, 0, 9, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"u 'type_info' - 11 - info U 'TVirtualIsAProxy' - 0 - isa "
"Y - 'ShowMembersFunc_t' 0 - show C - - 10 - dfil "
"C - - 10 - ifil i - 'Int_t' 0 - dl "
"i - 'Int_t' 0 - il", (char*)NULL, (void*) G__func2void( (TClass* (*)(const char*, Version_t, const type_info&, TVirtualIsAProxy*, ShowMembersFunc_t, const char*, const char*, Int_t, Int_t))(&ROOT::CreateClass) ), 0);
   G__memfunc_setup("AddClass",767,G__RootParallelGuiCintMpi_25_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"u 'type_info' - 11 - info Y - 'VoidFuncPtr_t' 0 - dict "
"i - 'Int_t' 0 - pragmabits", (char*)NULL, (void*) G__func2void( (void (*)(const char*, Version_t, const type_info&, VoidFuncPtr_t, Int_t))(&ROOT::AddClass) ), 0);
   G__memfunc_setup("RemoveClass",1124,G__RootParallelGuiCintMpi_25_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - cname", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&ROOT::RemoveClass) ), 0);
   G__memfunc_setup("ResetClassVersion",1759,G__RootParallelGuiCintMpi_25_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TClass' - 0 - - C - - 10 - - "
"s - 'Short_t' 0 - -", (char*)NULL, (void*) G__func2void( (void (*)(TClass*, const char*, Short_t))(&ROOT::ResetClassVersion) ), 0);
   G__memfunc_setup("RegisterClassTemplate",2167,G__RootParallelGuiCintMpi_25_0_5, 85, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_TNamed), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - file "
"i - 'Int_t' 0 - line", (char*)NULL, (void*) G__func2void( (TNamed* (*)(const char*, const char*, Int_t))(&ROOT::RegisterClassTemplate) ), 0);
   G__memfunc_setup("DefineBehavior",1403,G__RootParallelGuiCintMpi_25_0_6, 85, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLTInitBehavior), -1, 0, 2, 1, 1, 1, 
"Y - - 0 - - Y - - 0 - -", (char*)NULL, (void*) G__func2void( (const ROOT::TInitBehavior* (*)(void*, void*))(&ROOT::DefineBehavior) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLParallelGuiMpiLauncher(void) {
   /* ROOT::ParallelGuiMpiLauncher */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher));
   G__memfunc_setup("ParallelGuiMpiLauncher",2218,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher), -1, 0, 1, 1, 4, 0, "u 'ROOT::ParallelGuiMpiLauncher' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher), -1, 1, 1, 1, 4, 0, "u 'ROOT::ParallelGuiMpiLauncher' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParallelGuiMpiLauncher",2218,G__RootParallelGuiCintMpi_180_0_3, 105, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher), -1, 0, 1, 1, 1, 0, "U 'QWidget' - 0 '0' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__RootParallelGuiCintMpi_180_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmitOutput",1356,G__RootParallelGuiCintMpi_180_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("launch",635,G__RootParallelGuiCintMpi_180_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stop",454,G__RootParallelGuiCintMpi_180_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__RootParallelGuiCintMpi_180_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getExecutable",1346,G__RootParallelGuiCintMpi_180_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readStandardError",1751,G__RootParallelGuiCintMpi_180_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readStandardOutput",1886,G__RootParallelGuiCintMpi_180_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("started",759,G__RootParallelGuiCintMpi_180_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finished",842,G__RootParallelGuiCintMpi_180_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - exitCode i 'QProcess::ExitStatus' - 0 - exitStatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateTime",1042,G__RootParallelGuiCintMpi_180_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPath",717,G__RootParallelGuiCintMpi_180_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPrefix",942,G__RootParallelGuiCintMpi_180_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTmpDir",912,G__RootParallelGuiCintMpi_180_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWdir",726,G__RootParallelGuiCintMpi_180_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPreloadFiles",1530,G__RootParallelGuiCintMpi_180_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removePreloadFiles",1864,G__RootParallelGuiCintMpi_180_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPreloadFilesDestDir",2217,G__RootParallelGuiCintMpi_180_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEnvironmentVariable",2276,G__RootParallelGuiCintMpi_180_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeEnvironmentVariable",2633,G__RootParallelGuiCintMpi_180_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveMacro",929,G__RootParallelGuiCintMpi_180_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMacroBinaryMode",1832,G__RootParallelGuiCintMpi_180_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runProcess",1076,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseOutput",1164,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'QByteArray' - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeme",744,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'ROOT::ParallelGuiMpiLauncher' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sendOutput",1083,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'QString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RootParallelGuiCintMpi_180_0_30, 85, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ROOT::ParallelGuiMpiLauncher::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RootParallelGuiCintMpi_180_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::ParallelGuiMpiLauncher::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RootParallelGuiCintMpi_180_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ROOT::ParallelGuiMpiLauncher::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RootParallelGuiCintMpi_180_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ROOT::ParallelGuiMpiLauncher::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RootParallelGuiCintMpi_180_0_34, 85, G__get_linked_tagnum(&G__RootParallelGuiCintMpiLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RootParallelGuiCintMpi_180_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RootParallelGuiCintMpi_180_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootParallelGuiCintMpi_180_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RootParallelGuiCintMpi_180_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::ParallelGuiMpiLauncher::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RootParallelGuiCintMpi_180_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::ParallelGuiMpiLauncher::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RootParallelGuiCintMpi_180_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::ParallelGuiMpiLauncher::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RootParallelGuiCintMpi_180_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::ParallelGuiMpiLauncher::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ParallelGuiMpiLauncher", 2344, G__RootParallelGuiCintMpi_180_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRootParallelGuiCintMpi() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRootParallelGuiCintMpi() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRootParallelGuiCintMpi() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RootParallelGuiCintMpiLN_type_info = { "type_info" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_TVirtualIsAProxy = { "TVirtualIsAProxy" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_ROOTcLcLTInitBehavior = { "ROOT::TInitBehavior" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QWidget = { "QWidget" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QProcess = { "QProcess" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QByteArray = { "QByteArray" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QString = { "QString" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QFutureWatcherlEvoidgR = { "QFutureWatcher<void>" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QStringList = { "QStringList" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QTimer = { "QTimer" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QFile = { "QFile" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QProcessEnvironment = { "QProcessEnvironment" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_Ui = { "Ui" , 110 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_UicLcLRootParallelGuiMpiLauncher = { "Ui::RootParallelGuiMpiLauncher" , 99 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_QProcesscLcLExitStatus = { "QProcess::ExitStatus" , 101 , -1 };
G__linked_taginfo G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher = { "ROOT::ParallelGuiMpiLauncher" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRootParallelGuiCintMpi() {
  G__RootParallelGuiCintMpiLN_type_info.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_TClass.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_TBuffer.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_TMemberInspector.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_TNamed.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_TVirtualIsAProxy.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_ROOT.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_ROOTcLcLTInitBehavior.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QWidget.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QProcess.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QByteArray.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QString.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QFutureWatcherlEvoidgR.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QStringList.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QTimer.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QFile.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QProcessEnvironment.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_Ui.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_UicLcLRootParallelGuiMpiLauncher.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_QProcesscLcLExitStatus.tagnum = -1 ;
  G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRootParallelGuiCintMpi() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_type_info);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_TClass);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_TNamed);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_TVirtualIsAProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_ROOT),0,-1,0,(char*)NULL,G__setup_memvarROOT,G__setup_memfuncROOT);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_ROOTcLcLTInitBehavior);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QWidget);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QProcess);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QByteArray);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QString);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QFutureWatcherlEvoidgR);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QStringList);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QTimer);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QFile);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QProcessEnvironment);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_Ui);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_UicLcLRootParallelGuiMpiLauncher);
   G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_QProcesscLcLExitStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher),sizeof(ROOT::ParallelGuiMpiLauncher),-1,265984,(char*)NULL,G__setup_memvarROOTcLcLParallelGuiMpiLauncher,G__setup_memfuncROOTcLcLParallelGuiMpiLauncher);
}
extern "C" void G__cpp_setupRootParallelGuiCintMpi(void) {
  G__check_setup_version(30051515,"G__cpp_setupRootParallelGuiCintMpi()");
  G__set_cpp_environmentRootParallelGuiCintMpi();
  G__cpp_setup_tagtableRootParallelGuiCintMpi();

  G__cpp_setup_inheritanceRootParallelGuiCintMpi();

  G__cpp_setup_typetableRootParallelGuiCintMpi();

  G__cpp_setup_memvarRootParallelGuiCintMpi();

  G__cpp_setup_memfuncRootParallelGuiCintMpi();
  G__cpp_setup_globalRootParallelGuiCintMpi();
  G__cpp_setup_funcRootParallelGuiCintMpi();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRootParallelGuiCintMpi();
  return;
}
class G__cpp_setup_initRootParallelGuiCintMpi {
  public:
    G__cpp_setup_initRootParallelGuiCintMpi() { G__add_setup_func("RootParallelGuiCintMpi",(G__incsetup)(&G__cpp_setupRootParallelGuiCintMpi)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRootParallelGuiCintMpi() { G__remove_setup_func("RootParallelGuiCintMpi"); }
};
G__cpp_setup_initRootParallelGuiCintMpi G__cpp_setup_initializerRootParallelGuiCintMpi;

