/********************************************************************
* src//RootParallelGuiCintMpi.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error src//RootParallelGuiCintMpi.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern void G__cpp_setup_tagtableRootParallelGuiCintMpi();
extern void G__cpp_setup_inheritanceRootParallelGuiCintMpi();
extern void G__cpp_setup_typetableRootParallelGuiCintMpi();
extern void G__cpp_setup_memvarRootParallelGuiCintMpi();
extern void G__cpp_setup_globalRootParallelGuiCintMpi();
extern void G__cpp_setup_memfuncRootParallelGuiCintMpi();
extern void G__cpp_setup_funcRootParallelGuiCintMpi();
extern void G__set_cpp_environmentRootParallelGuiCintMpi();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "include/RootParallelGuiMpiLauncher.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__RootParallelGuiCintMpiLN_type_info;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_TClass;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_TBuffer;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_TMemberInspector;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_TNamed;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_TVirtualIsAProxy;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_ROOT;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_ROOTcLcLTInitBehavior;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QWidget;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QProcess;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QByteArray;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QString;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QFutureWatcherlEvoidgR;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QStringList;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QTimer;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QFile;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QProcessEnvironment;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_Ui;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_UicLcLRootParallelGuiMpiLauncher;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_QProcesscLcLExitStatus;
extern G__linked_taginfo G__RootParallelGuiCintMpiLN_ROOTcLcLParallelGuiMpiLauncher;

/* STUB derived class for protected member access */
